(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{382:function(s,t,a){"use strict";a.r(t);var n=a(42),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"调试程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调试程序"}},[s._v("#")]),s._v(" 调试程序")]),s._v(" "),a("p",[s._v("首先初始化一个项目：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" init -y\n")])])]),a("p",[s._v("此命令表示初始化一个项目，在此文件目录下自动生成 "),a("code",[s._v("package.json")]),s._v(" 的文件，里面保存")]),s._v(" "),a("p",[s._v("项目名称，作者，"),a("strong",[s._v("项目入口")]),s._v("，"),a("strong",[s._v("安装的依赖")]),s._v("等信息都会保存到这里。")]),s._v(" "),a("p",[s._v("前端的项目在浏览器调试就可以了，但是调试 node 程序我们需要别的工具，这里就介绍 vscode。")]),s._v(" "),a("p",[s._v("项目初始化完成后。")]),s._v(" "),a("p",[s._v("新建 "),a("code",[s._v("app.js")]),s._v(" 文件并在 "),a("code",[s._v("package.json")]),s._v(" 文件中"),a("strong",[s._v("设置为项目入口")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"main"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"app.js"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("完成后，点击 "),a("code",[s._v("F5")]),s._v("  键，选择 node 环境进行调试。")])])}),[],!1,null,null,null);t.default=e.exports}}]);
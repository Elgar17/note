{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{398:function(s,t,a){\"use strict\";a.r(t);var e=a(42),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"安装-typescript\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#安装-typescript\"}},[s._v(\"#\")]),s._v(\" 安装 Typescript\")]),s._v(\" \"),a(\"p\",[s._v(\"在看 typescript 之前你需要了解 Node.js, npm（nodejs内置的软件包管理器） 等知识，如果没有你需要安装一下 \"),a(\"a\",{attrs:{href:\"https://nodejs.org/en/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"Node.js\"),a(\"OutboundLink\")],1),s._v(\"（是一个 JavaScript 运行环境）。\")]),s._v(\" \"),a(\"h2\",{attrs:{id:\"_1、安装\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1、安装\"}},[s._v(\"#\")]),s._v(\" 1、安装\")]),s._v(\" \"),a(\"p\",[s._v(\"在全局安装：\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[a(\"code\",[s._v(\"i\")]),s._v(\"：install 的简写\")])]),s._v(\" \"),a(\"li\",[a(\"p\",[a(\"code\",[s._v(\"-g\")]),s._v(\"：安装在全局\")])])]),s._v(\" \"),a(\"div\",{staticClass:\"language-shell extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"npm\")]),s._v(\" i -g typescript\\n\")])])]),a(\"p\",[s._v(\"安装完成后创建一个 \"),a(\"code\",[s._v(\".ts\")]),s._v(\" 结尾的文件，在****此目录下**** 运行以下命令后，在次目录下生成与 \"),a(\"code\",[s._v(\".ts\")]),s._v(\" 文件相同名字的 \"),a(\"code\",[s._v(\".js\")]),s._v(\" 的文件，说明安装成功。\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-shell extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[a(\"code\",[s._v(\"tsc \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"文件名\"')]),s._v(\"\\n\\nnode \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"文件名\"')]),s._v(\" // 生成的 js 文件名\\n\")])])]),a(\"h2\",{attrs:{id:\"_2、实时编译-ts-文件\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2、实时编译-ts-文件\"}},[s._v(\"#\")]),s._v(\" 2、实时编译 TS 文件\")]),s._v(\" \"),a(\"p\",[s._v(\"这样有点麻烦，每次运行两次命令，为了简化这一步，有两种方案，一是 ts 提供了一个 tsconfig.json 文件在在里可以配置自动编译，（另一个是安装 tsc-node 插件，后面有介绍）。首先用以下命令初始换和创建文件：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-shell extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[a(\"code\",[s._v(\"tsc --init\\n\")])])]),a(\"p\",[s._v(\"之后再次目录下会生成 \"),a(\"code\",[s._v(\"tsconfig.json\")]),s._v(\" 的文件，打开 \"),a(\"code\",[s._v(\"outDir\")]),s._v(\" 的注释，后面写保存 js 文件的路径，默认是当前目录。\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-json extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"compilerOptions\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"outDir\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"./js/\"')]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 创建 js 的文件夹平在次目录先生成js文件 \")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])])]),a(\"p\",[s._v(\"之后点击 vscode —— 终端 —— 运行任务 —— 选择 tsconfige.json 文件，之后修改 ts 文件自动生成 js 文件，随时监听 ts 文件的变化。\")]),s._v(\" \"),a(\"h2\",{attrs:{id:\"_3、编译插件-tc-node\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3、编译插件-tc-node\"}},[s._v(\"#\")]),s._v(\" 3、编译插件(tc-node)\")]),s._v(\" \"),a(\"p\",[s._v(\"上面的步骤有点繁琐，先要生成 js 文件再执行 js 文件，为了简化这一步我们可以安装 ts-node 简化步骤，首先在全局安装：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-node extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"npm i -g ts-node\\n\")])])]),a(\"p\",[s._v(\"要注意的是 ts-node 不会生成 js 文件，用 ts-node 后运行 ts 文件后直接在控制台看到结果。\")]),s._v(\" \"),a(\"p\",[s._v(\"比如，我新建一个 hello.ts 的文件 填写以下内容：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-ts extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-ts\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" num\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"number\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"console\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"num\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\")])])]),a(\"p\",[s._v(\"保存后，在终端打开次目录（比如 hello.ts 文件在 demo 目录下，D:\\\\note\\\\demo），之后运行此命令：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-node extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"ts-node .\\\\hello.ts\\n\")])])]),a(\"p\",[s._v(\"控制台会输出 10，此目录下并不会生成 js 文件。\")])])}),[],!1,null,null,null);t.default=n.exports}}]);","extractedComments":[]}
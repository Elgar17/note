{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{439:function(s,t,e){\"use strict\";e.r(t);var l=e(42),a=Object(l.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[e(\"h1\",{attrs:{id:\"shell-入门\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#shell-入门\"}},[s._v(\"#\")]),s._v(\" shell 入门\")]),s._v(\" \"),e(\"p\",[s._v(\"最近接触 vuepress 时发现一个 \"),e(\"code\",[s._v(\".sh\")]),s._v(\" 结尾的文件。\")]),s._v(\" \"),e(\"p\",[s._v(\"打开看了一下，里面有一些自己认识的命令，像这样。\")]),s._v(\" \"),e(\"div\",{staticClass:\"language-git extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-git\"}},[e(\"code\",[s._v(\"cd text\\n\\ngit init\\ngit add -A\\ngit commit -m \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'deploy'\")]),s._v(\"\\n\")])])]),e(\"p\",[s._v(\"对于我这样前端程序员来说，是很少接触 Liunx 的，前端程序员也有必要了解一下 shell 脚本 。\")]),s._v(\" \"),e(\"p\",[s._v(\"那么，什么是 shell 脚本呢？\")]),s._v(\" \"),e(\"blockquote\",[e(\"p\",[s._v(\"Shell 是一个用 C 语言编写的程序，它是用户使用 Linux 的桥梁。Shell 既是一种命令语言，又是一种程序设计语言。 - 菜鸟教程\")])]),s._v(\" \"),e(\"p\",[s._v(\"这里只介绍 Bash 中的 shell 脚本， Bash是一个命令处理器，windows 下的 Git Bash 就是运行 shell 的一个环境，也是这里要讲的。\")]),s._v(\" \"),e(\"h2\",{attrs:{id:\"_1、hello-shell\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1、hello-shell\"}},[s._v(\"#\")]),s._v(\" 1、hello shell\")]),s._v(\" \"),e(\"p\",[s._v(\"这里以 windows 下的 Git Bash 为例。\")]),s._v(\" \"),e(\"p\",[s._v(\"新建一个 \"),e(\"code\",[s._v(\"hello.sh\")]),s._v(\" 的文件，并写入以下内容。\")]),s._v(\" \"),e(\"div\",{staticClass:\"language-shell extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 这是一行注释\")]),s._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 此命令运行后，创建一个 foo.txt 的文件并里面写入 hello shell\")]),s._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[s._v(\"echo\")]),s._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"hello shell\"')]),s._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" foot.txt\\n\")])])]),e(\"p\",[s._v(\"之后再此处打开 git bash ，输入以下内容，运行这个 shell 脚本, bash 后面跟一个文件路径。\")]),s._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"bash\")]),s._v(\" hello.sh\\n\")])])]),e(\"p\",[e(\"img\",{attrs:{src:\"hello-shell.gif\",alt:\"hello shell\"}})]),s._v(\" \"),e(\"p\",[e(\"code\",[s._v(\"echo\")]),s._v(' 是向窗口输出文本的命令，输出的就是 “” 内的内容，这里是 \"hello shell\"。')]),s._v(\" \"),e(\"p\",[e(\"code\",[s._v(\"> foot.txt\")]),s._v(\" 的作用是，将这个输出的文本写入到 \"),e(\"code\",[s._v(\"foot.txt\")]),s._v(\" 的文件中，上面的图中也看到了，运行后，多了一个文件。\")]),s._v(\" \"),e(\"p\",[s._v(\"这样我们把一些重复执行的操作，写道 shell 中一次性执行，可以提高我们的效率。\\n比如，把代码提交给 github 是一个重复的过程。\")]),s._v(\" \"),e(\"h2\",{attrs:{id:\"_2、常用命令\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2、常用命令\"}},[s._v(\"#\")]),s._v(\" 2、常用命令\")])])}),[],!1,null,null,null);t.default=a.exports}}]);","extractedComments":[]}